syntax = "proto3";

package protoc.identi.issues;

import "rosetta/rosetta/extensions.proto";

option go_package = "github.com/robinhoodmarkets/rh/rosetta/rosetta/identi;rosetta_identi";

enum IssueType {
    option (rosetta.extensions.gen_choices) = true;

    ISSUE_TYPE_UNSPECIFIED = 0;

    SUBMITTED_AS_ELDER = 1 [
        (rosetta.extensions.db_enum) = "submitted_as_elder",
        (rosetta.extensions.display_name) = "User was elder on submission",
        (rosetta.extensions.json_value) = "submitted_as_elder"
    ];

    SUBMITTED_AS_MINOR = 2 [
        (rosetta.extensions.db_enum) = "submitted_as_minor",
        (rosetta.extensions.display_name) = "User was minor on submission",
        (rosetta.extensions.json_value) = "submitted_as_minor"
    ];

    SINGLE_LETTER_NAME = 3 [
        (rosetta.extensions.db_enum) = "single_letter_name",
        (rosetta.extensions.display_name) = "User has single letter name",
        (rosetta.extensions.json_value) = "single_letter_name"
    ];

    UNVERIFIED_NAME_ADDRESS_DOB = 4 [
        (rosetta.extensions.db_enum) = "unverified_name_address_dob",
        (rosetta.extensions.display_name) = "Cannot verify name, address, and date of birth",
        (rosetta.extensions.json_value) = "unverified_name_address_dob"
    ];

    DUPLICATE_GOV_ID = 5 [
        (rosetta.extensions.db_enum) = "duplicate_gov_id",
        (rosetta.extensions.display_name) = "Duplicate SSN",
        (rosetta.extensions.json_value) = "duplicate_gov_id"
    ];

    DUPLICATE_NAME_DOB = 6 [
        (rosetta.extensions.db_enum) = "duplicate_name_dob",
        (rosetta.extensions.display_name) = "Duplicate name and date of birth",
        (rosetta.extensions.json_value) = "duplicate_name_dob"
    ];

    CONSUMER_DECEASED = 7 [
        (rosetta.extensions.db_enum) = "consumer_deceased",
        (rosetta.extensions.display_name) = "Consumer deceased",
        (rosetta.extensions.json_value) = "consumer_deceased"
    ];

    HIGH_RISK_CITIZENSHIP = 8 [
        (rosetta.extensions.db_enum) = "high_risk_citizenship",
        (rosetta.extensions.display_name) = "User has high risk citizenship",
        (rosetta.extensions.json_value) = "high_risk_citizenship"
    ];

    MEDIUM_RISK_CITIZENSHIP = 9 [
        (rosetta.extensions.db_enum) = "medium_risk_citizenship",
        (rosetta.extensions.display_name) = "User has medium risk citizenship",
        (rosetta.extensions.json_value) = "medium_risk_citizenship"
    ];

    SECURITY_AFFILIATED_PERSON = 10 [
        (rosetta.extensions.db_enum) = "security_affiliated_person",
        (rosetta.extensions.display_name) = "Security affiliated employee",
        (rosetta.extensions.json_value) = "security_affiliated_person"
    ];

    US_SANCTIONS_MATCH = 11 [
        (rosetta.extensions.db_enum) = "us_sanctions_match",
        (rosetta.extensions.display_name) = "User may be on a US sanctions list",
        (rosetta.extensions.json_value) = "us_sanctions_match"
    ];

    UK_SANCTIONS_MATCH = 12 [
        (rosetta.extensions.db_enum) = "uk_sanctions_match",
        (rosetta.extensions.display_name) = "User may be on a UK sanctions list",
        (rosetta.extensions.json_value) = "uk_sanctions_match"
    ];

    PEP_MATCH = 13 [
        (rosetta.extensions.db_enum) = "pep_match",
        (rosetta.extensions.display_name) = "User may be a PEP",
        (rosetta.extensions.json_value) = "pep_match"
    ];

    BLACKLISTED_SSN = 14 [
        (rosetta.extensions.db_enum) = "blacklisted_ssn",
        (rosetta.extensions.display_name) = "Blacklisted SSN",
        (rosetta.extensions.json_value) = "blacklisted_ssn"
    ];

    FAKE_SSN = 15 [
        (rosetta.extensions.db_enum) = "fake_ssn",
        (rosetta.extensions.display_name) = "User has fake SSN",
        (rosetta.extensions.json_value) = "fake_ssn"
    ];

    UNSUPPORTED_CITIZENSHIP = 16 [
        (rosetta.extensions.db_enum) = "unsupported_citizenship",
        (rosetta.extensions.display_name) = "Unsupported Citizenship",
        (rosetta.extensions.json_value) = "unsupported_citizenship"
    ];

    FATF_CITIZENSHIP = 17 [
        (rosetta.extensions.db_enum) = "fatf_citizenship",
        (rosetta.extensions.display_name) = "FATF Citizenship",
        (rosetta.extensions.json_value) = "fatf_citizenship"
    ];

    UNVERIFIED_ADDRESS = 18 [
        (rosetta.extensions.db_enum) = "unverified_address",
        (rosetta.extensions.display_name) = "Cannot verify address",
        (rosetta.extensions.json_value) = "unverified_address"
    ];

    UNVERIFIED_DOB = 19 [
        (rosetta.extensions.db_enum) = "unverified_dob",
        (rosetta.extensions.display_name) = "Cannot verify date of birth",
        (rosetta.extensions.json_value) = "unverified_dob"
    ];

    UNVERIFIED_SSN = 20 [
        (rosetta.extensions.db_enum) = "unverified_ssn",
        (rosetta.extensions.display_name) = "Cannot verify SSN",
        (rosetta.extensions.json_value) = "unverified_ssn"
    ];

    OFAC_CITIZENSHIP = 21 [
        (rosetta.extensions.db_enum) = "ofac_citizenship",
        (rosetta.extensions.display_name) = "OFAC Citizenship",
        (rosetta.extensions.json_value) = "ofac_citizenship"
    ];

    SSN_NOT_AVAILABLE = 22 [
        (rosetta.extensions.db_enum) = "ssn_not_available",
        (rosetta.extensions.display_name) = "Valid SSN, Need ID",
        (rosetta.extensions.json_value) = "ssn_not_available"
    ];

    DOW_JONES_FAILURE = 23 [
        (rosetta.extensions.db_enum) = "dow_jones_failure",
        (rosetta.extensions.display_name) = "Dow Jones failure",
        (rosetta.extensions.json_value) = "dow_jones_failure"
    ];

    EXPERIAN_FROZEN = 24 [
        (rosetta.extensions.db_enum) = "experian_frozen",
        (rosetta.extensions.display_name) = "Experian report frozen",
        (rosetta.extensions.json_value) = "experian_frozen"
    ];

    US_CONSUMER_DECEASED = 25 [
        (rosetta.extensions.db_enum) = "us_consumer_deceased",
        (rosetta.extensions.display_name) = "US consumer deceased",
        (rosetta.extensions.json_value) = "us_consumer_deceased"
    ];

    US_SUBMITTED_AS_ELDER = 26 [
        (rosetta.extensions.db_enum) = "us_submitted_as_elder",
        (rosetta.extensions.display_name) = "User was elder on submission",
        (rosetta.extensions.json_value) = "us_submitted_as_elder"
    ];

    EXPERIAN_FAILED_TO_RUN = 27 [
        (rosetta.extensions.db_enum) = "experian_failed_to_run",
        (rosetta.extensions.display_name) = "Experian failed to run",
        (rosetta.extensions.json_value) = "experian_failed_to_run"
    ];

    US_SINGLE_LETTER_NAME = 28 [
        (rosetta.extensions.db_enum) = "us_single_letter_name",
        (rosetta.extensions.display_name) = "US user has single letter name",
        (rosetta.extensions.json_value) = "us_single_letter_name"
    ];

    FRAUD_SHIELD = 29 [
        (rosetta.extensions.db_enum) = "fraud_shield",
        (rosetta.extensions.display_name) = "Fraud shield hit",
        (rosetta.extensions.json_value) = "fraud_shield"
    ];

    HIGH_RISK_IDENTITY = 30 [
        (rosetta.extensions.db_enum) = "high_risk_identity",
        (rosetta.extensions.display_name) = "Identity is high risk for this user",
        (rosetta.extensions.json_value) = "high_risk_identity"
    ];

    FOREIGN_IP = 31 [
        (rosetta.extensions.db_enum) = "foreign_ip",
        (rosetta.extensions.display_name) = "IP address not in accepted countries",
        (rosetta.extensions.json_value) = "foreign_ip"
    ];

    DUPLICATE_GOV_ID_CANNOT_FIX = 32 [
        (rosetta.extensions.db_enum) = "duplicate_gov_id_cannot_fix",
        (rosetta.extensions.display_name) = "Duplicate SSN cannot fix",
        (rosetta.extensions.json_value) = "duplicate_gov_id_cannot_fix"
    ];

    SENT_SERVICING_EMAIL = 33 [
        (rosetta.extensions.db_enum) = "sent_servicing_email",
        (rosetta.extensions.display_name) = "Sent servicing email",
        (rosetta.extensions.json_value) = "sent_servicing_email"
    ];

    HIGH_RISK_ADDRESS = 34 [
        (rosetta.extensions.db_enum) = "high_risk_address",
        (rosetta.extensions.display_name) = "High risk address",
        (rosetta.extensions.json_value) = "high_risk_address"
    ];

    OFAC_FAILURE = 35 [
        (rosetta.extensions.db_enum) = "ofac_failure",
        (rosetta.extensions.display_name) = "Applicant may be on the OFAC list",
        (rosetta.extensions.json_value) = "ofac_failure"
    ];

     LEXIS_NEXIS_OFAC_FAILURE = 36 [
        (rosetta.extensions.db_enum) = "lexis_nexis_ofac_failure",
        (rosetta.extensions.display_name) = "Applicant may be on the LexisNexis OFAC list",
        (rosetta.extensions.json_value) = "lexis_nexis_ofac_failure"
     ];

     EXPERIAN_BAD_RESULT = 37 [
        (rosetta.extensions.db_enum) = "experian_bad_result",
        (rosetta.extensions.display_name) = "Experian returned a bad result",
        (rosetta.extensions.json_value) = "experian_bad_result"
    ];
}

enum IssueState {
    option (rosetta.extensions.gen_choices) = true;

    ISSUE_STATE_UNSPECIFIED = 0;

    OPEN_CANNOT_FIX = 1 [(rosetta.extensions.auto_values) = true];
    PENDING_SYSTEM_CHECKS = 2 [(rosetta.extensions.auto_values) = true];
    PENDING_USER = 3 [(rosetta.extensions.auto_values) = true];
    PENDING_MANUAL_REVIEW = 4 [(rosetta.extensions.auto_values) = true];
    CLOSED = 5 [(rosetta.extensions.auto_values) = true];
}
