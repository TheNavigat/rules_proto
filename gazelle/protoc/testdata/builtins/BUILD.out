load("@rules_proto//proto:defs.bzl", "proto_library")
load("@build_stack_rules_proto//rules:proto_compile.bzl", "proto_compile")

# gazelle:proto_language builtins rule proto_compile
# gazelle:proto_language builtins plugin builtin:cpp
# gazelle:proto_language builtins plugin builtin:java
# gazelle:proto_language builtins plugin builtin:js:closure
# gazelle:proto_language builtins plugin builtin:js:common
# gazelle:proto_language builtins plugin builtin:php
# gazelle:proto_language builtins plugin builtin:python
# gazelle:proto_language builtins plugin builtin:ruby
# gazelle:proto_language builtins plugin builtin:csharp
# gazelle:proto_language builtins plugin builtin:objc

proto_library(
    name = "test_proto",
    srcs = ["test.proto"],
    visibility = ["//visibility:public"],
)

proto_compile(
    name = "test_builtins_compile",
    outs = {"@build_stack_rules_proto//plugin/builtin:java": "test.srcjar"},
    mappings = {"Test.php": "GPBMetadata/Test.php"},
    options = {
        "@build_stack_rules_proto//plugin/builtin:closurejs": [
            "import_style=closure",
            "library=test",
        ],
        "@build_stack_rules_proto//plugin/builtin:commonjs": ["import_style=commonjs"],
    },
    outputs = [
        "BoolValue.php",
        "EchoStatus.php",
        "Payload.php",
        "PayloadType.php",
        "Test.cs",
        "Test.pbobjc.h",
        "Test.pbobjc.m",
        "Test.php",
        "test.js",
        "test.pb.cc",
        "test.pb.h",
        "test.srcjar",
        "test_pb.js",
        "test_pb.rb",
        "test_pb2.py",
    ],
    plugins = [
        "@build_stack_rules_proto//plugin/builtin:closurejs",
        "@build_stack_rules_proto//plugin/builtin:commonjs",
        "@build_stack_rules_proto//plugin/builtin:cpp",
        "@build_stack_rules_proto//plugin/builtin:csharp",
        "@build_stack_rules_proto//plugin/builtin:java",
        "@build_stack_rules_proto//plugin/builtin:objc",
        "@build_stack_rules_proto//plugin/builtin:php",
        "@build_stack_rules_proto//plugin/builtin:python",
        "@build_stack_rules_proto//plugin/builtin:ruby",
    ],
    proto = "test_proto",
)
