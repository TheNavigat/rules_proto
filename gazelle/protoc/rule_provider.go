package protoc

import (
	"github.com/bazelbuild/bazel-gazelle/config"
	"github.com/bazelbuild/bazel-gazelle/label"
	"github.com/bazelbuild/bazel-gazelle/rule"
)

// RuleProvider implementations are capable of providing a rule and import list
// to the gazelle GenerateArgs response.
type RuleProvider interface {
	// Kind of rule e.g. 'proto_library'
	Kind() string
	// Name provides the name of the rule.
	Name() string
	// Rule provides the gazelle rule implementation.
	Rule() *rule.Rule
	// Imports provides the list of imported symbols for the rule.
	Imports() []string
	// Visibility provides the visibility list for the rule.
	Visibility() []string
	// KindInfo provides the kind metadata used for the gazelle Kinds API.
	KindInfo() rule.KindInfo
	// Resolve performs deps resolution, similar to the gazelle Resolver interface.
	Resolve(c *config.Config, r *rule.Rule, importsRaw interface{}, from label.Label)
}

// FileVisitor implementations get called back with the rule.File of the package
// being visited by gazelle (it may be nil if no build file already exists).
// This exists to allow RuleProvider implementations to modify the file directly
// (e.g. adding additional load statements).
type FileVisitor interface {
	VisitFile(*rule.File) *rule.File
}

// GeneratedSrcsProvider implementations are capable of providing a list of
// generated source files.
type GeneratedSrcsProvider interface {
	// GeneratedSrcs returns the list of source files generated by the provider.
	GeneratedSrcs() []string
}
